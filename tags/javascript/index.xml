<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Polyglott</title>
    <link>https://ottogiron.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on Polyglott</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>ottog2486@gmail.com (Otto Giron)</managingEditor>
    <webMaster>ottog2486@gmail.com (Otto Giron)</webMaster>
    <copyright>(c) 2018 Otto Giron.</copyright>
    <lastBuildDate>Mon, 23 Mar 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ottogiron.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting Up your Node.js Unit Tests with Chai And Mocha</title>
      <link>https://ottogiron.github.io/2015/03/23/setting-up-your-node.js-unit-tests-with-chai-and-mocha/</link>
      <pubDate>Mon, 23 Mar 2015 00:00:00 +0000</pubDate>
      <author>ottog2486@gmail.com (Otto Giron)</author>
      <guid>https://ottogiron.github.io/2015/03/23/setting-up-your-node.js-unit-tests-with-chai-and-mocha/</guid>
      <description>&lt;p&gt;In this post I&amp;#8217;m going to list the steps for setting up a Node.js project with unit testing.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Waterline: Node.js adapter-based ORM</title>
      <link>https://ottogiron.github.io/2015/03/16/waterline-node.js-adapter-based-orm/</link>
      <pubDate>Mon, 16 Mar 2015 00:00:00 +0000</pubDate>
      <author>ottog2486@gmail.com (Otto Giron)</author>
      <guid>https://ottogiron.github.io/2015/03/16/waterline-node.js-adapter-based-orm/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/balderdashy/waterline&#34;&gt;Waterline&lt;/a&gt; is an ORM/ODM (Object Document Mapper), part of the &lt;a href=&#34;http://sailsjs.org&#34;&gt;Sails Framework&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Waterline is agnostic of the data store so it allows you to map different types of databases to a common model structure, focusing on business logic for CURD operations, querying records and models relations mapping.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Weaselpecker: Node.js- Waterline Simple Mocking Library</title>
      <link>https://ottogiron.github.io/2015/03/08/weaselpecker-node.js--waterline-simple-mocking-library/</link>
      <pubDate>Sun, 08 Mar 2015 00:00:00 +0000</pubDate>
      <author>ottog2486@gmail.com (Otto Giron)</author>
      <guid>https://ottogiron.github.io/2015/03/08/weaselpecker-node.js--waterline-simple-mocking-library/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/ottogiron/weaselpecker&#34;&gt;Weaselpecker&lt;/a&gt; is a small nodejs module I wrote for mocking &lt;a href=&#34;https://github.com/balderdashy/waterline&#34;&gt;Waterline&lt;/a&gt; models. His name is inspired in the famous and beloved weasel woodpecker rider.&lt;/p&gt;

&lt;p style=&#34;text-align:center&#34;&gt;
  &lt;img src=&#34;http://i1.wp.com/res.cloudinary.com/dhilz8r88/image/upload/c_scale,w_354/v1425798498/cnn-weaslepecker_c9d7yf.jpg?w=474&#34; alt=&#34;alt WeaselPecker&#34; data-recalc-dims=&#34;1&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Web Components</title>
      <link>https://ottogiron.github.io/2015/03/08/web-components/</link>
      <pubDate>Sun, 08 Mar 2015 00:00:00 +0000</pubDate>
      <author>ottog2486@gmail.com (Otto Giron)</author>
      <guid>https://ottogiron.github.io/2015/03/08/web-components/</guid>
      <description>&lt;p&gt;Web components is a set of standards which brings technologies we were used to, but normally provided by frameworks or libraries such angular, ember, knockout (among others). Web Components standard natively supports in the web browser custom HTML elements, HTML imports and templates, also &amp;#8220;shadow DOM&amp;#8221; which extends the current DOM specification providing boundaries and better encapsulation between DOM trees.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Apache Thrift Java Server and NodeJS Client</title>
      <link>https://ottogiron.github.io/2014/07/21/apache-thrift-java-server-and-nodejs-client/</link>
      <pubDate>Mon, 21 Jul 2014 00:00:00 +0000</pubDate>
      <author>ottog2486@gmail.com (Otto Giron)</author>
      <guid>https://ottogiron.github.io/2014/07/21/apache-thrift-java-server-and-nodejs-client/</guid>
      <description>&lt;p&gt;As an exercise for learning &lt;a title=&#34; Apache Thrift&#34; href=&#34;https://thrift.apache.org/&#34; target=&#34;_blank&#34;&gt;Apache Thrift&lt;/a&gt; I&amp;#8217;m writing a simple API for &lt;a href=&#34;http://jackrabbit.apache.org/oak/&#34; target=&#34;_blank&#34;&gt;Apache Jackrabit 3&lt;/a&gt; using this software framework developed by Facebook.  &lt;a title=&#34; Apache Thrift&#34; href=&#34;https://thrift.apache.org/&#34; target=&#34;_blank&#34;&gt;Apache Thrift&lt;/a&gt; is useful for writing cross-language services for many languages such Java, Python, PHP, JavaScript and others.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>