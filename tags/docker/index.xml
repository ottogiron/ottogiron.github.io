<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Polyglott</title>
    <link>https://ottogiron.me/tags/docker/</link>
    <description>Recent content in Docker on Polyglott</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>ottog2486@gmail.com (Otto Giron)</managingEditor>
    <webMaster>ottog2486@gmail.com (Otto Giron)</webMaster>
    <copyright>(c) 2018 Otto Giron.</copyright>
    <lastBuildDate>Wed, 16 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ottogiron.me/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why Kubernetes</title>
      <link>https://ottogiron.me/2018/05/16/why-kubernetes/</link>
      <pubDate>Wed, 16 May 2018 00:00:00 +0000</pubDate>
      <author>ottog2486@gmail.com (Otto Giron)</author>
      <guid>https://ottogiron.me/2018/05/16/why-kubernetes/</guid>
      <description>Deployment, scaling, monitoring, service discovery, configuration, we may or not be aware of such problems when we start but we definitely have to find a solution for them if we want to have a sustainable infrastructure for implementing software which is able to support increasing levels of success.
There are many approaches to tackle the aforementioned situation, and a good first step is to standardize the application representation from the infrastructure point of view.</description>
    </item>
    
    <item>
      <title>Why Docker</title>
      <link>https://ottogiron.me/2018/04/25/why-docker/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      <author>ottog2486@gmail.com (Otto Giron)</author>
      <guid>https://ottogiron.me/2018/04/25/why-docker/</guid>
      <description>Abstractions We use abstraction to be able to cope with the high amount of information our senses receive all the time, by filtering and focus on what we really need, without that ability we would not be able to function properly in life.
When we talk about applications, it is useful to abstract them as packages. There are some things we would like to do with those packages, which are finally going to be delivered to a client or user.</description>
    </item>
    
  </channel>
</rss>